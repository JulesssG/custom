source /home/jules/.profile # Oh-My-Zsh
ZSH_THEME="mytheme"
_Z_DATA="$HOME/.cache/z/z_data"
plugins=(
	z
  zsh-autosuggestions
	colored-man-pages
	zsh-syntax-highlighting
)
source $ZSH/oh-my-zsh.sh
ZSH_HIGHLIGHT_STYLES[path]="none" # Do not highlight path url-like

# General
eval $( dircolors -b $DOTS_PATH/ls_colors )
export PATH="$HOME/.local/bin:$PATH"	# pip scripts directory
export JUPYTER_CONFIG_DIR="$HOME/.config/jupyter"
export IPYTHONDIR="$HOME/.config/ipython"
export NPM_CONFIG_USERCONFIG="$HOME/.config/npm"

# Key Bindings
bindkey '^@'	autosuggest-execute
bindkey '^Z'	undo
bindkey ',' delete-char
bindkey '^O'	kill-line
bindkey '^H'	vi-backward-word
bindkey 'Od'	vi-backward-word
bindkey 'h'	backward-char
bindkey '^J'	history-beginning-search-forward
bindkey '^K'	history-beginning-search-backward
bindkey 'l'	forward-char
bindkey '^L'	vi-forward-word
bindkey 'Oc'	vi-forward-word
bindkey 'e'	edit-command-line
bindkey 'm' run-help
## Replace arrows by vim bindings in menu selection
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect '^[[A' undefined-key
#bindkey -M menuselect '^[[B' -r
#bindkey -M menuselect '^[[C' -r
#bindkey -M menuselect '^[[D' -r

# Aliases
## Arch
alias pm="pacman"
alias pms="sudo pacman -S $1"
alias pmr="sudo pacman -Rns $1"
alias pmy="sudo pacman -Syu"
alias yayy="yay -Syua"
## GNU
### Dirs and Files
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias zw="cd ~/downloads"
alias zm="cd ~/videos/movies"
alias zi="cd ~/images"
alias d="dirs -v"
alias cp="nocorrect cp"
alias mkd="nocorrect mkdir -pv"
alias mv="nocorrect mv"
alias ls="ls --color=tty -v --group-directories-first"
alias la="ls -a"
alias l='\ls --color=tty -v -alhtr'
alias ll='\ls --color=tty -v -alht'
alias rm="rm -I"
alias du="du -h"
alias tree='tree -a -I ".git|venv|.venv|*.class"'
alias tp="tree -C | less"
### Process management
alias sudo=$'nocorrect sudo\t'
alias c="clear"
alias j="jobs"
alias h="history"
alias hg="history | grep $@"
	#alias less='less -F -X -b -1'
alias diff="diff --color=auto"
alias grep="grep --color=auto"
alias psg="ps aux | grep $@"
alias ka="killall"
alias k="kill"
alias kb="kill $(ps aux | grep '/bin/bash.*bch$' | awk '{print $2}')"
## Wifi
alias nmr="nmcli device wifi rescan"
alias nml="nmcli device wifi list"
alias nmc="nmcli -a device wifi connect"
alias nmu="nmcli -p con up"
## Git
alias g="git"
alias gs="git status -s -b"
alias ga="git add"
alias gc="git commit"
alias gd="git diff"
alias gb="git branch"
alias gpl="git pull"
alias gp="git push"
alias gl="git --no-pager log -10 --oneline --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) -%C(red) %an%C(reset)%C(bold yellow)%+d%C(reset)'"
alias gll="git log --oneline --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) -%C(red) %an%C(reset)%C(bold yellow)%+d%C(reset)'"
## EPFL
### cds
alias ze="cd $EPFL_DIR"
alias zes="cd ${EPFL_DIR}/sds"
alias zel="cd $EPFL_DIR/lds"
alias zedl="cd $EPFL_DIR/dl"
alias zedv="cd $EPFL_DIR/dv"
alias zedi="cd $EPFL_DIR/dis"
alias zeo="cd $EPFL_DIR/oml"
### Misc
alias todo="v ${EPFL_DIR}/todo.md"
alias programs="v $EPFL_DIR/programs"
alias sdock="sudo docker"
alias jptn="jupyter notebook >/dev/null"
alias jptl="jupyter lab >/dev/null"
alias jptln="jupyter lab --no-browser >/dev/null"
alias clust040="ssh gottraux@iccluster040.iccluster.epfl.ch"
## Dots Shortcuts
alias supdatesl="sudo -E updatesl"
alias szrc="source ~/.zshrc"
alias zd="cd $DOTS_PATH"
alias dots="vim $DOTS_PATH"
alias xrc="v $DOTS_PATH/xinitrc"
alias prc="v $DOTS_PATH/profile"
alias zrc="v $DOTS_PATH/zshrc"
alias vrc="v $DOTS_PATH/vimrc"
alias brc="v $DOTS_PATH/bashrc"
alias grc="v $DOTS_PATH/gitconfig"
alias zs="cd $SCRIPTS_PATH"
alias scripts="v $SCRIPTS_PATH"
alias zco="cd ~/.config/"
alias zcu="cd $CUSTOM_PATH"
alias qrc="v ~/.config/qutebrowser/config.py"
alias qrc2="v ~/.config/qutebrowser/config-default.py"
alias irc="v ~/.config/i3/config"
alias rrc="v ~/.config/ranger/rc.conf"
alias zq="cd ~/.config/qutebrowser"
## Others
alias v="vim"
alias sv="sudo vim"
alias gvim="vim"
alias ra="ranger"
alias cal="cal -m"
alias ghs="\gs"
alias lcp="fc -e 'sed -i -e \"s/$/ \| xsel -ib/\"'"
alias xsetoff="xset s off -dpms"
alias xseton="xset s on +dpms;xset s 300 7"
alias neo="neomutt"
alias untar="tar -zxvf"
alias ffmpeg="ffmpeg -hide_banner"
alias ffplay="ffplay -hide_banner"
alias archey="archey3 --config=$HOME/.config/archey3/archey3.conf"
alias zshman="man zshzle"
alias seam="sudo mount /dev/sdb2 /mnt/seagate"
alias seaum="sudo umount /mnt/seagate"
alias pipu="pip3 install --user -U"
alias pipua="pip3 list --outdated | sed 1,2d | sed 's/\(\S*\).*$/\1/' | xargs -n1 pip install --user -U"
alias condasource="source /opt/miniconda3/etc/profile.d/conda.sh"

# Functions
## Misc
function stopwatch(){
  date1=`date +%s`;
   while true; do
    echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
    sleep 0.1
   done
}
function timer(){
	date1=$((`date +%s` + $1))
	while [ "$date1" -ge `date +%s` ]
	do
		echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
		sleep 0.1
	done
	[[ $2 = 's' ]] && return 0
	ffplay -nodisp "$HOME/musics/Eagles - Hotel California.mp3" > /dev/null
}
function weather(){
	curl wttr.in/$1
}
function mvep() {
	mv "$@" "$(du -a -d 3 $EPFL_DIR | awk '{print $2}' | grep -Fv . | fzf)"
}
function cpep() {
	cp "$@" "$(du -a -d 3 $EPFL_DIR | awk '{print $2}' | grep -Fv . | fzf)"
}
function mvp() {
	rsync -aP --remove-source-files $1 $2 && rm -r $1
}
function cpp() {
	rsync -aP $1 $2
}
function findpdfgrep() {
	find . -name "$1" -exec pdfgrep -i "$2" {} +
}
function gr() {
	cd $(git rev-parse --show-toplevel)
}
function gac() {
	git add $(git rev-parse --show-toplevel)
	git commit
}
function gamno() {
	git add $(git rev-parse --show-toplevel)
	git commit --amend --no-edit
}
function grsa() {
	git restore --staged $(git rev-parse --show-toplevel)
}
function gsjoin() {
	/usr/bin/gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dFIXEDMEDIA -dPDFFitPage -sPAPERSIZE=a4 -sOutputFile="$1" "${@:2}"
}
# Not working
function gsopt(){
	if ! [[ "$1" =~ ".*\.pdf" ]]
	then
		echo "Not a pdf"
		return 1
	fi
	cp "$1" gsopt-save.pdf
	/usr/bin/gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -sOutputFile="$1" "$1"
	[ $? -eq 0] && rm gsopt-save.pdf
}
function playm() {
	ffplay "$(find ~/seagate/musics -type f | fzf)" &> /dev/null
}

# Save last directory
precmd() { pwd > /tmp/LASTDIRSAVE}

source /home/jules/.config/broot/launcher/bash/br
